--- a/src/org/junit/internal/matchers/CombinableMatcher.java
+++ b/src/org/junit/internal/matchers/CombinableMatcher.java
@@ -24,11 +24,11 @@
 	
 	@SuppressWarnings("unchecked")
 	public CombinableMatcher<T> and(Matcher<? extends T> matcher) {
-		return new CombinableMatcher<T>(allOf(matcher, fMatcher));
+		return new CombinableMatcher<T>(allOf((Matcher)matcher, fMatcher));
 	}
 
 	@SuppressWarnings("unchecked")
 	public CombinableMatcher<T> or(Matcher<? extends T> matcher) {
-		return new CombinableMatcher<T>(anyOf(matcher, fMatcher));
+		return new CombinableMatcher<T>(anyOf((Matcher)matcher, fMatcher));
 	}
-}
\ No newline at end of file
+}
--- a/src/org/junit/internal/matchers/IsCollectionContaining.java
+++ b/src/org/junit/internal/matchers/IsCollectionContaining.java
@@ -41,7 +41,7 @@
 
     @Factory
     public static <T> Matcher<Iterable<T>> hasItem(T element) {
-        return hasItem(equalTo(element));
+        return hasItem((Matcher)equalTo(element));
     }
 
     @Factory
@@ -51,7 +51,7 @@
         for (Matcher<? extends T> elementMatcher : elementMatchers) {
             all.add(hasItem(elementMatcher));
         }
-        return allOf(all);
+        return allOf((Collection)all);
     }
 
     @Factory
@@ -61,7 +61,7 @@
         for (T element : elements) {
             all.add(hasItem(element));
         }
-        return allOf(all);
+        return allOf((Collection)all);
     }
 
 }